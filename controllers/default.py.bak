# -*- coding: utf-8 -*-
# this file is released under public domain and you can use without limitations

#########################################################################
## This is a samples controller
## - index is the default action of any application
## - user is required for authentication and authorization
## - download is for downloading files uploaded in the db (does streaming)
## - call exposes all registered services (none by default)
#########################################################################
def include_paint_files():
    #CSS for Paint
    response.files.append(URL('static','css/main.css'))
    response.files.append(URL('static','css/canvas.css'))
    response.files.append(URL('static','css/ui-darkness/jquery-ui-1.8.10.custom.css'))
    response.files.append(URL('static','css/colorpicker.css'))
    
    #JS for paint
    response.files.append(URL('static','js/jquery/jquery-ui-1.8.10.custom.min.js'))
    response.files.append(URL('static','js/rxjs/rx.js'))
    response.files.append(URL('static','js/rxjs/rx.jQuery.js'))
    response.files.append(URL('static','js/mootools/mootools-core-compressed-1.3.js'))
    response.files.append(URL('static','js/mootools/mootools-more-compressed-1.3.js'))
    response.files.append(URL('static','js/modernizr/modernizr-1.6.min.js'))
    response.files.append(URL('static','js/colorpicker/colorpicker.js'))
    response.files.append(URL('static','js/layout.js'))
    response.files.append(URL('static','js/brushes.js'))
    response.files.append(URL('static','js/canvas.js'))
    response.files.append(URL('static','js/paint.js'))
    
def index():
    """
    example action using the internationalization operator T and flash
    rendered by views/default/index.html or views/generic.html
    """
    return dict(include_paint_files=include_paint_files)

@auth.requires_login()
def new():
    return dict()

@auth.requires_login()
def collections():
    return dict()

def contact():
    return dict()
    
def user():
    """
    exposes:
    http://..../[app]/default/user/login
    http://..../[app]/default/user/logout
    http://..../[app]/default/user/register
    http://..../[app]/default/user/profile
    http://..../[app]/default/user/retrieve_password
    http://..../[app]/default/user/change_password
    use @auth.requires_login()
        @auth.requires_membership('group name')
        @auth.requires_permission('read','table name',record_id)
    to decorate functions that need access control
    """
    return dict(form=auth())


def download():
    """
    allows downloading of uploaded files
    http://..../[app]/default/download/[filename]
    """
    return response.download(request,db)


def call():
    """
    exposes services. for example:
    http://..../[app]/default/call/jsonrpc
    decorate with @services.jsonrpc the functions to expose
    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv
    """
    return service()


@auth.requires_signature()
def data():
    """
    http://..../[app]/default/data/tables
    http://..../[app]/default/data/create/[table]
    http://..../[app]/default/data/read/[table]/[id]
    http://..../[app]/default/data/update/[table]/[id]
    http://..../[app]/default/data/delete/[table]/[id]
    http://..../[app]/default/data/select/[table]
    http://..../[app]/default/data/search/[table]
    but URLs must be signed, i.e. linked with
      A('table',_href=URL('data/tables',user_signature=True))
    or with the signed load operator
      LOAD('default','data.load',args='tables',ajax=True,user_signature=True)
    """
    return dict(form=crud())
