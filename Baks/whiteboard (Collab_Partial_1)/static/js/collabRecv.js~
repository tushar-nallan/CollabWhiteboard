var x;
var y;
var z
$(document).ready(function(){
    var chat_token = $('#channel_api_params').attr('chat_token');
    var channel = new goog.appengine.Channel(chat_token);
    var socket = channel.open();
    socket.onopen = function(){
    };
    socket.onmessage = function(m){
        var data = $.parseJSON(m.data);
        if(data['type']=='userOnline')
        {
            notif('notif',data['userName']+" has joined !");
        }
        else if(data['type']=='changeDoc'){
			console.log("CHANGE RECIEVED : ",data);
			element = (new DOMParser()).parseFromString(data['elements'], "image/svg+xml").childNodes[0];

            $("#svgcontent #"+element.getAttribute('id')).remove();
			
			if(data['remove'] == 'true') return;

			layerSave = svgCanvas.getCurrentLayer();
			svgCanvas.setCurrentLayer(data['layer']);
			
			x = element;
			
			data = {
				'element':element.tagName,
				"curStyles": true,
				"attr": {
					"id": element.getAttribute('id'),
					"d": element.getAttribute('d'),
					"fill": element.getAttribute('fill'),
					"style" :element.getAttribute('style'),
					"xlink:href" :element.getAttribute('xlink:href'),
					"opacity": element.getAttribute('opacity'),
					"transform" :element.getAttribute('transform'),
					"r" : element.getAttribute('r'),
					"pointer-events":element.getAttribute('pointer-events'),
					"display":element.getAttribute('display'),
					"points" : element.getAttribute('points'),
					"cx": element.getAttribute('cx'),
					"cy": element.getAttribute('cy'),
					"rx": element.getAttribute('rx'),
					"ry": element.getAttribute('ry'),
					"font-family": element.getAttribute('font-family'),
					"text-anchor": element.getAttribute('text-anchor'),
					"xml:space": element.getAttribute('xml:space'),
					"stroke" :element.getAttribute('stroke'),
					"stroke-width" :element.getAttribute('stroke-width'),
					"stroke-dasharray": element.getAttribute('stroke-dasharray'),
					"stroke-linejoin": element.getAttribute('stroke-linejoin'),
					"stroke-linecap": element.getAttribute('stroke-linecap'),
					"stroke-opacity": element.getAttribute('stroke-opacity'),
					"x": element.getAttribute('x'),
					"y": element.getAttribute('y'),
					"width": element.getAttribute('width'),
					"height": element.getAttribute('height'),
					"x1": element.getAttribute('x1'),
					"y1": element.getAttribute('y1'),
					"x2": element.getAttribute('x2'),
					"y2": element.getAttribute('y2'),
				}
			};

			svgCanvas.addSvgElementFromJson(data);
			svgCanvas.setCurrentLayer(layerSave);
			
        }
    };
    socket.onerror =  function(err){
    };
    socket.onclose =  function(){
        alert("channel closed");
    };
    
    $(window).unload(function (){
        $.ajax({
			url:'/whiteboard/default/updateStatus/',
			data : {
				docId:$("#collabDetails #docId").html()
			}
		});
    });
});